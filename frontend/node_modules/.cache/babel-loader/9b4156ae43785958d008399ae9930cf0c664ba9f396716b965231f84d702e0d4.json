{"ast":null,"code":"\"use client\";\n\n// packages/react/focus-guards/src/FocusGuards.tsx\nimport * as React from \"react\";\nvar count = 0;\nfunction FocusGuards(props) {\n  useFocusGuards();\n  return props.children;\n}\nfunction useFocusGuards() {\n  React.useEffect(() => {\n    const edgeGuards = document.querySelectorAll(\"[data-radix-focus-guard]\");\n    document.body.insertAdjacentElement(\"afterbegin\", edgeGuards[0] ?? createFocusGuard());\n    document.body.insertAdjacentElement(\"beforeend\", edgeGuards[1] ?? createFocusGuard());\n    count++;\n    return () => {\n      if (count === 1) {\n        document.querySelectorAll(\"[data-radix-focus-guard]\").forEach(node => node.remove());\n      }\n      count--;\n    };\n  }, []);\n}\nfunction createFocusGuard() {\n  const element = document.createElement(\"span\");\n  element.setAttribute(\"data-radix-focus-guard\", \"\");\n  element.tabIndex = 0;\n  element.style.outline = \"none\";\n  element.style.opacity = \"0\";\n  element.style.position = \"fixed\";\n  element.style.pointerEvents = \"none\";\n  return element;\n}\nvar Root = FocusGuards;\nexport { FocusGuards, Root, useFocusGuards };","map":{"version":3,"names":["React","count","FocusGuards","props","useFocusGuards","children","useEffect","edgeGuards","document","querySelectorAll","body","insertAdjacentElement","createFocusGuard","forEach","node","remove","element","createElement","setAttribute","tabIndex","style","outline","opacity","position","pointerEvents","Root"],"sources":["/home/peter/convo/frontend/node_modules/@radix-ui/react-focus-guards/src/FocusGuards.tsx"],"sourcesContent":["import * as React from 'react';\n\n/** Number of components which have requested interest to have focus guards */\nlet count = 0;\n\nfunction FocusGuards(props: any) {\n  useFocusGuards();\n  return props.children;\n}\n\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\nfunction useFocusGuards() {\n  React.useEffect(() => {\n    const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n    document.body.insertAdjacentElement('afterbegin', edgeGuards[0] ?? createFocusGuard());\n    document.body.insertAdjacentElement('beforeend', edgeGuards[1] ?? createFocusGuard());\n    count++;\n\n    return () => {\n      if (count === 1) {\n        document.querySelectorAll('[data-radix-focus-guard]').forEach((node) => node.remove());\n      }\n      count--;\n    };\n  }, []);\n}\n\nfunction createFocusGuard() {\n  const element = document.createElement('span');\n  element.setAttribute('data-radix-focus-guard', '');\n  element.tabIndex = 0;\n  element.style.outline = 'none';\n  element.style.opacity = '0';\n  element.style.position = 'fixed';\n  element.style.pointerEvents = 'none';\n  return element;\n}\n\nconst Root = FocusGuards;\n\nexport {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n};\n"],"mappings":";;;AAAA,YAAYA,KAAA,MAAW;AAGvB,IAAIC,KAAA,GAAQ;AAEZ,SAASC,YAAYC,KAAA,EAAY;EAC/BC,cAAA,CAAe;EACf,OAAOD,KAAA,CAAME,QAAA;AACf;AAMA,SAASD,eAAA,EAAiB;EAClBJ,KAAA,CAAAM,SAAA,CAAU,MAAM;IACpB,MAAMC,UAAA,GAAaC,QAAA,CAASC,gBAAA,CAAiB,0BAA0B;IACvED,QAAA,CAASE,IAAA,CAAKC,qBAAA,CAAsB,cAAcJ,UAAA,CAAW,CAAC,KAAKK,gBAAA,CAAiB,CAAC;IACrFJ,QAAA,CAASE,IAAA,CAAKC,qBAAA,CAAsB,aAAaJ,UAAA,CAAW,CAAC,KAAKK,gBAAA,CAAiB,CAAC;IACpFX,KAAA;IAEA,OAAO,MAAM;MACX,IAAIA,KAAA,KAAU,GAAG;QACfO,QAAA,CAASC,gBAAA,CAAiB,0BAA0B,EAAEI,OAAA,CAASC,IAAA,IAASA,IAAA,CAAKC,MAAA,CAAO,CAAC;MACvF;MACAd,KAAA;IACF;EACF,GAAG,EAAE;AACP;AAEA,SAASW,iBAAA,EAAmB;EAC1B,MAAMI,OAAA,GAAUR,QAAA,CAASS,aAAA,CAAc,MAAM;EAC7CD,OAAA,CAAQE,YAAA,CAAa,0BAA0B,EAAE;EACjDF,OAAA,CAAQG,QAAA,GAAW;EACnBH,OAAA,CAAQI,KAAA,CAAMC,OAAA,GAAU;EACxBL,OAAA,CAAQI,KAAA,CAAME,OAAA,GAAU;EACxBN,OAAA,CAAQI,KAAA,CAAMG,QAAA,GAAW;EACzBP,OAAA,CAAQI,KAAA,CAAMI,aAAA,GAAgB;EAC9B,OAAOR,OAAA;AACT;AAEA,IAAMS,IAAA,GAAOvB,WAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}